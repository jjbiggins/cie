/*------------------------------------------------------------------------------
 * Programmer: Your name here
 * Name:
 * Description:
 -------------------------------------------------------------------------------*/
#include <iostream>
#include "Movie.h"
#include "RentalCustomer.h"


using namespace std;





int main(void) {
  int done = 0;
  int choice;
  int userNumber;
  int movieNumber;
  MoviePtrType startPtr = nullptr;
  RentalCustomerPtrType customerPtr = nullptr;

  const unsigned int INITIALNUMMOVIES = 11;
  const unsigned int INITIALNUMUSERS = 8;
  static const char *const InitialMovieNameList[INITIALNUMMOVIES] = {
          "Passengers", "La La Land", "Assasins Creed", "Sing",
          "Suicide Squad", "The Girl on the Train", "The Magnificient Seven",
          "Underworld: Blood Wars", "Fifty Shades Darker", "Moana", "Arrival"
  };

  for (unsigned int i = 0; i < INITIALNUMMOVIES; i++) {
    insertNodeMovieLinkedList(&startPtr, InitialMovieNameList[i], INITIALNUMMOVIES - i);
  }
  printMovieLinkedList(startPtr);


  static const char *const InitialUserNamesList[INITIALNUMUSERS] = {
          "E.Mou", "B.Evans", "B.Schweer", "R.Su", "K.Anderson", "K.Christensen", "M.Jacob", "H.Johnson"
  };

  /*for (unsigned int i = 0; i < INITIALNUMUSERS; i++){
      insertRentalCustomerNodeLinkedList(&userStartPtr, InitialUserNamesList[i], INITIALNUMUSERS - i, );
  }
  printRentalCustomerLinkedList(userStartPtr);*/

  cout << "\nWelcome to the movie rental system." << endl;
  while (!done) {
    cout << "\nPlease enter a choice:" << endl;
    cout << "  1. Status" << endl;
    cout << "  2. Return Movie" << endl;
    cout << "  3. Rent Movie" << endl;
    cout << "  4. Add User" << endl;
    cout << "  5. Delete User" << endl;
    cout << "Your choice = ";
    cin >> choice;

    switch (choice) {
      case 1:
        printRentalCustomerLinkedList(customerPtr);
        cin >> movieNumber;
        //insertMovieNodeInLinkedList(&startPtr, InitialMovieNameList, movieNumber);
        cout << "New list:" << endl;
        //printLinkedList(startPtr);
        break;
        /*case 2:
          cout << "\nEnter value of node to delete: ";
              cin >> nodeValue;
              deleteNodeInLinkedList(&startPtr, nodeValue);
              cout << "New list:" << endl ;
              printLinkedList(startPtr);
              break;
        case 3:
          cout << "\nEnter RentalCustomer number from the following list: " << endl;
              printRentalCustomerLinkedList(userStartPtr);
              cin >> userNumber;
              cout << "\nEnter Movie number from the following list: " << endl;
              printMovieLinkedList(startPtr);
              cin >> movieNumber;
              //userStartPtr->setMoviePtr(startPtr);
              insertRentalCustomerNodeLinkedList(&userStartPtr, InitialMovieNameList[movieNumber], InitialMovieNameList[movieNumber]);
              break;
        case 4:
          cout << "\nDeleting all nodes in list." << endl ;
              freeAllMemoryInLinkedList(&startPtr);
              cout << "New list:" << endl ;
              printLinkedList(startPtr);
              break;
        case 5:
          cout << "Thanks for using the linked list management system." << endl ;
              done = 1;
              break;
        default:
          cout << "Invalid choice." << endl ;
              break;*/
    }
  }

}